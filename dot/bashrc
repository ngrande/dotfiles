#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return
# see also: https://unix.stackexchange.com/questions/257571/why-does-bashrc-check-whether-the-current-shell-is-interactive#257613

# prevent history commands from executing by ! or !! but wait for execution by user
shopt -s histverify

# greeting
archey3
# notify user if restart necessary
bold=$(tput bold)
normal=$(tput sgr0)
installed=$(pacman -Q linux | awk '{print $2}')
active=$(uname -r | awk -F - '{print $1"."$2"-"$3}')

if [ $active != $installed ]; then
	echo "${bold}you have a newer kernel version installed ($installed) - please restart your machine${normal}"
fi

# after greeting include additional file with commands (won't be commited)
if [ -f $HOME/.bashrc_ext ]; then
	. $HOME/.bashrc_ext
fi

# alias's
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias ls='ls -hrt --color=auto'
alias ll='ls -Al'
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# pacman and aur helper
alias paorph='yay -Rns $(yay -Qdtq)'
alias paup='yay -Syu --ignore linux'

# btrfs
#alias buh='sudo btrfs filesystem usage /home'
alias buh='sudo echo ""; echo "/home usage"; sudo btrfs filesystem usage /home | grep -E "^\s+(Used|Free \(estimated\)):";echo ""'
#alias bur='sudo btrfs filesystem usage /'
alias bur='sudo echo ""; echo "/ usage"; sudo btrfs filesystem usage / | grep -E "^\s+(Used|Free \(estimated\)):";echo ""'

# shell prompt
COLOR="\[\033[1;36m\]"
NO_COLOR="\[\033[0m\]"

function _git_prompt { 
	local cwd="\w" 
	local branch="" 
	local git_status="" 

	pwd | grep -E dev_linux[0-9]+_grande 1> /dev/null
	if [[ $? -eq 0 ]]; then
		return
	fi
	
	git_status="$(LANG=C git status 2> /dev/null)" 
	if [[ $? -eq 0 ]]; then 
		local rela_dir="$(git rev-parse --show-prefix)" 
		rela_dir="${rela_dir%/}" 
		local repo_root="${PWD%$rela_dir}" 
		[[ "$repo_root" =~ ^"$HOME"(/|$) ]] && repo_root="~${repo_root#$HOME}" 
		cwd="\[\e[36m\]${repo_root}\[\e[0m\]${rela_dir}" 
		local pattern="^(# )?On branch ([^${IFS}]*)" 
		if [[ ${git_status} =~ ${pattern} ]]; then 
			local branch_name=${BASH_REMATCH[2]} 
			local branch_color="" 
			if [[ ${git_status} =~ (working (tree|directory) clean) ]]; then 
				branch_color="\e[32m" 
				if [[ ${git_status} =~ (Your branch is ahead) ]]; then 
					branch_color="\e[35m" 
				elif [[ "$(git log --all --not --remotes --tags --oneline)" ]]; then 
					branch_color="\e[33m" 
				fi
			else
				branch_color="\e[31m" 
			fi
			
			branch="[\[$branch_color\]$branch_name\[\e[0m\]]" 
		fi
		
		if [[ ${git_status} =~ (HEAD detached) ]]; then 
			branch="[\[\e[1;31;46m\]DETACHED HEAD\[\e[0m\]]" 
		fi
	fi

	PS1="\[\e]0;\u@\h:\w\a\e[0m\]\u@\h:${cwd}${branch}\\$ " 
} 

PROMPT_COMMAND=_git_prompt
#PS1='\u@\h \W >> '
 
HISTTIMEFORMAT="[%Y-%m-%d %T %Z] "
HISTCONTROL=erasedups
HISTSIZE=100000
HISTFILESIZE=100000

# add my scripts to PATH
PATH=$PATH:$HOME/projects/scripts
PATH=$PATH:$HOME/.local/bin
