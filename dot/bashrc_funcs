#!/bin/sh

function cheat {
	# call cheat.sh and get some tips
	res=""
	for arg in $@
	do
		res="$res$arg/"
	done
	curl cheat.sh/$res
}

function _git_prompt {

	# shell prompt colors
	# TRUE COLOR: 38;2;R;G;Bm (don't know what the 38;2; is for...)
	TRUE_COLOR="\[\e[38;2;255;3;160m\]" # PINK
	NO_GIT_COLOR="\[\e[38;2;255;135;200m\]" # light pink
	GIT_COLOR="\[\e[1;36m\]" # CYAN
	# USE COLOR PALETTE OF Tomorrow-Night vim scheme
	GIT_CLEAN_COLOR="\[\e[38;2;127;255;0m\]" # GREEN
	GIT_AHEAD_COLOR="\[\e[38;2;238;130;238m\]" # PURPLE
	GIT_BEHIND_COLOR="\[\e[38;2;253;151;32m\]" # ORANGE
	GIT_CHANGES_COLOR="\[\e[38;2;249;39;114m\]" # RED
	GIT_DETACHED_COLOR="\[\e[48;2;249;39;114m\]" # BACKGROUND RED
	NO_COLOR="\[\e[m\]"

	local cwd="${NO_GIT_COLOR}\w${NO_COLOR}" 
	local branch="" 
	local git_status="" 

	pwd | grep -E dev-linux[0-9]+ 1> /dev/null
	if [[ $? -eq 0 ]]; then
		return
	fi
	
	git_status="$(LANG=C git status 2> /dev/null)" 
	if [[ $? -eq 0 ]]; then 
		local rela_dir="$(git rev-parse --show-prefix)" 
		rela_dir="${rela_dir%/}" 
		local repo_root="${PWD%$rela_dir}" 
		[[ "$repo_root" =~ ^"$HOME"(/|$) ]] && repo_root="~${repo_root#$HOME}" 

		cwd="${GIT_COLOR}${repo_root}${rela_dir}${NO_COLOR}" 

		local pattern="^(# )?On branch ([^${IFS}]*)" 
		if [[ ${git_status} =~ ${pattern} ]]; then 
			local branch_name=${BASH_REMATCH[2]} 
			local branch_color="" 
			if [[ ${git_status} =~ (working (tree|directory) clean) ]]; then 
				branch_color=${GIT_CLEAN_COLOR}
				if [[ ${git_status} =~ (Your branch is ahead) ]]; then 
					branch_color=${GIT_AHEAD_COLOR}
				elif [[ "$(git log --all --not --remotes --tags --oneline)" ]]; then 
					branch_color=${GIT_BEHIND_COLOR}
				fi
			else
				branch_color=${GIT_CHANGES_COLOR}
			fi
			
			#branch="${TRUE_COLOR}[${NO_COLOR}\[$branch_color\]$branch_name\[${NO_COLOR}\]${TRUE_COLOR}]${NO_COLOR}" 
			branch="${TRUE_COLOR}[${NO_COLOR}${branch_color}${branch_name}${NO_COLOR}${TRUE_COLOR}]${NO_COLOR}" 
		fi
		
		if [[ ${git_status} =~ (HEAD detached) ]]; then 
			# branch="[\[\e[1;31;46m\]DETACHED HEAD\[\e[0m\]]" 
			#branch="${TRUE_COLOR}[${NO_COLOR}\[${GIT_DETACHED_COLOR}\]DETACHED HEAD\[${NO_COLOR}\]${TRUE_COLOR}]${NO_COLOR}"
			branch="${TRUE_COLOR}[${NO_COLOR}${GIT_DETACHED_COLOR}DETACHED HEAD${NO_COLOR}${TRUE_COLOR}]${NO_COLOR}"
		fi
	fi

	# PS1="\[\e]0;\u@\h:\w\a\e[0m\]\u@\h:${cwd}${branch}\\$ "
	#PS1="\[\e]0;\u@\h:\w\a\e[0m${TRUE_COLOR}\u@\h:${NO_COLOR}${cwd}${branch}${TRUE_COLOR}\$${NO_COLOR}\] "
	PS1="\[\e]0;\u@\h:\w\a\e[0m\]${TRUE_COLOR}\u@\h:${NO_COLOR}${cwd}${branch}${TRUE_COLOR}\$${NO_COLOR} "
} 

